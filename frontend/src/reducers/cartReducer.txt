import {ADD_TO_CART } from "../constants/cartConstant"

export const cartReducer = (state={cartItems:[]},action)=>{
    switch (action.type) {
        case ADD_TO_CART:
            const item = action.payload;

            const isItemExist = state.cartItems.find((i)=>i.product===item.product)

            if(isItemExist){
                return {
                ...state,
                cartItems:state.cartItems.map((i)=>i.product===isItemExist.product ? item : i)
            }

            }else{
                return{
                    ...state,
                    cartItems:[...state.cartItems,item]
                }

            }
    
        default:
            return state;
    }

}



cartAction


import {ADD_TO_CART } from "../constants/cartConstant"
import axios from "axios"

export const addItemsToCart = (id , quantity) =>async (dispatch,getState)=>{
    
       
        const {data} = await axios.get(`/api/v1/product/${id}`)

        dispatch({
            type:ADD_TO_CART ,
             payload:{
                 product:data.product._id,
                 name:data.product.name,
                 price:data.product.price,
                 image:data.product.image[0].url,
                 stock:data.product.stock,
                 quantity,
                }
            });

            localStorage.setItem("cartItems", JSON.stringify(getState().cart.cartItems));            
        
        
   
   
        
    }


